{
  "name": "browser-x",
  "version": "0.0.1-beta6",
  "description": "A partial implementation of the W3C DOM API on top of an HTML5 parser and serializer.",
  "homepage": "https://github.com/aui/browser-x",
  "author": {
    "name": "aui",
    "email": "sugarpie.tang@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/aui/browser-x.git"
  },
  "bugs": {
    "url": "https://github.com/aui/browser-x/issues"
  },
  "main": "index.js",
  "dependencies": {
    "css-mediaquery": "^0.1.2",
    "cssom": "^0.3.1",
    "cssstyle": "^0.2.34",
    "nwmatcher": "^1.3.7",
    "parse5": "^2.1.5",
    "specificity": "^0.1.5",
    "verror": "^1.6.1"
  },
  "scripts": {
    "test": "mocha ./test/index"
  },
  "keywords": [
    "dom",
    "browser",
    "cssom",
    "css",
    "css3",
    "selector",
    "spider",
    "style",
    "getComputedStyle"
  ],
  "engines": {
    "node": ">= 4.0.0"
  },
  "license": "MIT",
  "readme": "# BrowserX\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-ci-image]][travis-ci-url]\n\nBrowserX 是一个基于 NodeJS 实现的轻量级“浏览器”，它的目标是高效的实现 DOM 中最核心的特性，以便开发者能够在 NodeJS 中使用 W3C 标准方法来操作文档与样式。\n\n* 提供 DOM 核心核心\n* 完整支持 CSS3 选择器来查询节点\n* 支持样式解析，如 `element.style`、`document.styleSheets`、`window.getComputedStyle()` 以及 CSSOM 相关构造器访问\n\n## 安装\n\n``` shell\nnpm install browser-x\n```\n\n## 接口\n\n### browser(options, callback)\n\n返回：`Promise`\n\n``` javascript\nvar browser = require('browser-x');\n\nvar url = __dirname + '/debug.html';\nbrowser({\n    url: url,\n    loadCssFile: true,\n    silent: false\n}, function (errors, window) {\n    if (errors) {\n        throw errors;\n    }\n    var document = window.document;\n    var element = document.querySelector('#banner h2');\n    var fontFamily = window.getComputedStyle(element, '::after').fontFamily;\n    console.log(fontFamily);\n});\n```\n\n## options\n\n``` javascript\n{\n    /**\n     * 文件基础路径 - 支持本地或远程地址\n     */\n    url: 'about:blank',\n\n    /*\n     * HTML 文本内容\n     */\n    html: null,\n\n    /**\n     * 是否支持加载外部 CSS 文件\n     */\n    loadCssFile: false,\n\n    /**\n     * 是否忽略内部解析错误-关闭它有利于开发调试\n     * @type    {Boolean}\n     */\n    silent: true,\n\n    /**\n     * 请求超时限制\n     * @type    {Number}    毫秒\n     */\n    resourceTimeout: 8000,\n\n    /**\n     * 最大的文件加载数量限制\n     * @type    {Number}    数量\n     */\n    resourceMaxNumber: 64,\n\n    /**\n     * 是否缓存请求成功的资源\n     * @return  {Object}\n     */\n    resourceCache: true,\n\n    /**\n     * 映射资源路径\n     * @param   {String}    旧文件地址\n     * @return  {String}    新文件地址\n     */\n    resourceMap: function(file) {\n        return file;\n    },\n\n    /**\n     * 忽略资源\n     * @param   {String}    文件地址\n     * @return  {Boolean}   如果返回`true`则忽略当当前文件的加载\n     */\n    resourceIgnore: function(file) {\n        return false;\n    },\n\n    /**\n     * 资源加载前的事件\n     * @param   {String}    文件地址\n     */\n    resourceBeforeLoad: function(file) {\n    },\n\n    /**\n     * 加载远程资源的自定义请求头\n     * @param   {String}    文件地址\n     * @return  {Object}\n     */\n    resourceRequestHeaders: function(file) {\n        return {\n            'accept-encoding': 'gzip,deflate'\n        };\n    }\n}\n```\n\n## 支持的 DOM API\n\n* Window\n    - [getComputedStyle()](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle)\n    - [CSSStyleDeclaration()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSStyleDeclaration)\n    - [CSSRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSRule)\n    - [CSSStyleRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSStyleRule)\n    - [MediaList()](https://developer.mozilla.org/zh-CN/docs/Web/API/MediaList)\n    - [CSSMediaRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSMediaRule)\n    - [CSSImportRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSImportRule)\n    - [CSSFontFaceRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSFontFaceRule)\n    - [StyleSheet()](https://developer.mozilla.org/zh-CN/docs/Web/API/StyleSheet)\n    - [CSSStyleSheet()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSStyleSheet)\n    - [CSSKeyframesRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSKeyframesRule)\n    - [CSSKeyframeRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSKeyframeRule)\n* Document\n    - [URL](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/URL)\n    - [documentElement](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/documentElement)\n    - [head](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/head)\n    - [body](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/body)\n    - [title](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/title)\n    - [styleSheets](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/styleSheets)\n    - [getElementsByTagName()](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/getElementsByTagName)\n    - [getElementById()](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/getElementById)\n    - [querySelector()](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/querySelector)\n    - [querySelectorAll()](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/querySelectorAll)\n* Element\n    - [id](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/id)\n    - [tagName](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/tagName)\n    - [className](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/className)\n    - [innerHTML](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/innerHTML)\n    - [outerHTML](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/outerHTML)\n    - [attributes](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.attributes)\n    - [hasAttribute()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/hasAttribute)\n    - [getAttribute()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getAttribute)\n    - [querySelector()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/querySelector)\n    - [querySelectorAll()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/querySelectorAll)\n    - [getElementsByTagName()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getElementsByTagName)\n    - [matches()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/matches)\n* HTMLElement\n    - [style](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/style)\n* Node\n    - [nodeName](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.nodeName)\n    - [nodeType](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.nodeType)\n    - [childNodes](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.childNodes)\n    - [parentNode](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.parentNode)\n    - [firstChild](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.firstChild)\n    - [lastChild](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.lastChild)\n    - [nextSibling](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.nextSibling)\n    - [previousSibling](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.previousSibling)\n    - [textContent](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.textContent)\n    - [baseURI](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.baseURI)\n\n## 注意事项\n\n1. 不支持 XML 文档解析 \n2. 所有的 DOM 属性均为只读（*计划在未来版本支持写入*）\n3. window.getComputedStyle() 仅能获取元素或伪元素在 CSS 中定义的原始值或继承属性，但没有进行计算输出（例如 em \\> px）\n4. document.styleSheets 在浏览器中无法跨域访问 CSSOM，BrowserX 没有做此限制（外部样式需要打开 `loadCssFile` 选项）\n5. 不支持浏览器怪异模式\n\n## 为什么使用 BrowserX\n\nBrowserX 适合做这些事情：\n\n1. 高效的爬虫程序，使用 CSS 选择器来收集内容\n2. 分析元素的样式使用情况，例如和 CSS 相关的开发工具\n\n例如：WebFont 压缩工具——[font-spider](https://github.com/aui/font-spider)\n\n如果需要更多的 DOM 特性，例如跑基于 DOM 的测试脚本、甚至载入 jQuery 等，那么 [jsdom](https://github.com/tmpvar/jsdom) 这个项目可能会更适合你（注意：它没有完整解析样式表）。\n\n\n[npm-image]: https://img.shields.io/npm/v/browser-x.svg\n[npm-url]: https://npmjs.org/package/browser-x\n[node-version-image]: https://img.shields.io/node/v/browser-x.svg\n[node-version-url]: http://nodejs.org/download/\n[downloads-image]: https://img.shields.io/npm/dm/browser-x.svg\n[downloads-url]: https://npmjs.org/package/browser-x\n[travis-ci-image]: https://travis-ci.org/aui/browser-x.svg?branch=master\n[travis-ci-url]: https://travis-ci.org/aui/browser-x",
  "readmeFilename": "README.md",
  "_id": "browser-x@0.0.1-beta6",
  "dist": {
    "shasum": "17ec54edbe7889637dedc2184c7932697d73e207"
  },
  "_from": "browser-x@^0.0.1-beta6",
  "_resolved": "https://registry.npmjs.org/browser-x/-/browser-x-0.0.1-beta6.tgz"
}
